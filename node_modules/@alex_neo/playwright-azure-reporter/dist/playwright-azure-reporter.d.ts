import { Reporter, TestCase, TestResult } from '@playwright/test/reporter';
import * as TestInterfaces from 'azure-devops-node-api/interfaces/TestInterfaces';
import { TestPoint } from 'azure-devops-node-api/interfaces/TestInterfaces';
declare const attachmentTypesArray: readonly ["screenshot", "video", "trace"];
type TAttachmentType = Array<typeof attachmentTypesArray[number] | RegExp>;
type TTestRunConfig = Omit<TestInterfaces.RunCreateModel, 'name' | 'automated' | 'plan' | 'pointIds'> | undefined;
type TPublishTestResults = 'testResult' | 'testRun';
export interface AzureReporterOptions {
    token: string;
    planId: number;
    orgUrl: string;
    projectName: string;
    publishTestResultsMode?: TPublishTestResults;
    logging?: boolean | undefined;
    isDisabled?: boolean | undefined;
    environment?: string | undefined;
    testRunTitle?: string | undefined;
    uploadAttachments?: boolean | undefined;
    attachmentsType?: TAttachmentType | undefined;
    testRunConfig?: TTestRunConfig;
    testPointMapper?: (testCase: TestCase, testPoints: TestPoint[]) => Promise<TestPoint[] | undefined>;
}
declare class AzureDevOpsReporter implements Reporter {
    private _debug;
    private _debugWarning;
    private _testApi;
    private _coreApi;
    private _publishedResultsCount;
    private _testsAliasToBePublished;
    private _testResultsToBePublished;
    private _connection;
    private _orgUrl;
    private _projectName;
    private _environment?;
    private _planId;
    private _logging;
    private _isDisabled;
    private _testRunTitle;
    private _uploadAttachments;
    private _attachmentsType;
    private _token;
    private _runIdPromise;
    private _resolveRunId;
    private _rejectRunId;
    private _publishResultsPromise;
    private _resolvePublishResults;
    private _rejectPublishResults;
    private _testRunConfig;
    private _testPointMapper;
    private _azureClientOptions;
    private _publishTestResultsMode;
    constructor(options: AzureReporterOptions);
    _validateOptions(options: AzureReporterOptions): void;
    onBegin(): Promise<void>;
    onTestEnd(test: TestCase, testResult: TestResult): Promise<void>;
    onEnd(): Promise<void>;
    printsToStdio(): boolean;
    private _log;
    private _warning;
    private _getCaseIds;
    private _logTestItem;
    private _createRun;
    private _removePublished;
    private _checkProject;
    private _getTestPointsOfTestResults;
    private _addReportingOverride;
    private _uploadAttachmentsFunc;
    private _publishCaseResult;
    private _publishTestResults;
}
export default AzureDevOpsReporter;
