import * as Models from './models';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class LicenseMetrics {
    private client;
    constructor(client: Client);
    /**
     * Returns the total approximate user account across all jira licenced application keys. Please note this information
     * is cached with a 7-day lifecycle and could be stale at the time of call.
     */
    getApproximateLicenseCount<T = Models.LicenseMetric>(callback: Callback<T>): Promise<void>;
    /**
     * Returns the total approximate user account across all jira licenced application keys. Please note this information
     * is cached with a 7-day lifecycle and could be stale at the time of call.
     */
    getApproximateLicenseCount<T = Models.LicenseMetric>(callback?: never): Promise<T>;
    /**
     * Returns the total approximate user account for a specific `jira licence application key`. Please note this
     * information is cached with a 7-day lifecycle and could be stale at the time of call.
     */
    getApproximateApplicationLicenseCount<T = Models.LicenseMetric>(applicationKey: string, callback: Callback<T>): Promise<void>;
    /**
     * Returns the total approximate user account for a specific `jira licence application key`. Please note this
     * information is cached with a 7-day lifecycle and could be stale at the time of call.
     */
    getApproximateApplicationLicenseCount<T = Models.LicenseMetric>(applicationKey: string, callback?: never): Promise<T>;
}
